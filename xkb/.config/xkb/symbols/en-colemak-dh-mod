partial alphanumeric_keys modifier_keys
xkb_symbols "colemak_dh_mod" {

    name[Group1]= "English (Colemak-DH-mod)";

    key <TLDE> { [ grave, asciitilde ] };
    key <AE01> { [ 1, exclam ] };
    key <AE02> { [ 2, at ] };
    key <AE03> { [ 3, numbersign ] };
    key <AE04> { [ 4, dollar ] };
    key <AE05> { [ 5, percent ] };
    key <AE06> { [ 6, asciicircum ] };
    key <AE07> { [ 7, ampersand ] };
    key <AE08> { [ 8, asterisk ] };
    key <AE09> { [ 9, parenleft ] };
    key <AE10> { [ 0, parenright ] };
    key <AE11> { [ minus, underscore ] };
    key <AE12> { [ equal, plus ] };

    key <AD01> { [ q, Q ] };
    key <AD02> { [ w, W ] };
    key <AD03> { [ f, F ] };
    key <AD04> { [ p, P ] };
    key <AD05> { [ b, B ] };
    key <AD06> { [ j, J ] };
    key <AD07> { [ l, L ] };
    key <AD08> { [ u, U ] };
    key <AD09> { [ y, Y ] };
    key <AD10> { [ apostrophe, quotedbl ] };
    key <AD11> { [ bracketleft, braceleft ] };
    key <AD12> { [ bracketright, braceright ] };

    key <AC01> { [ a, A ] };
    key <AC02> { [ r, R ] };
    key <AC03> { [ s, S ] };
    key <AC04> { [ t, T ] };
    key <AC05> { [ g, G ] };
    key <AC06> { [ m, M ] };
    key <AC07> { [ n, N ] };
    key <AC08> { [ e, E ] };
    key <AC09> { [ i, I ] };
    key <AC10> { [ o, O ] };
    key <AC11> { [ less, greater ] };

    key <AB01> { [ z, Z ] };
    key <AB02> { [ x, X ] };
    key <AB03> { [ c, C ] };
    key <AB04> { [ d, D ] };
    key <AB05> { [ v, V ] };
    key <AB06> { [ k, K ] };
    key <AB07> { [ h, H ] };
    key <AB08> { [ comma, semicolon ] };
    key <AB09> { [ period, colon ] };
    key <AB10> { [ slash, question ] };

    key <BKSL> { [ backslash, bar ] };

    // Sticky modifiers
    key <LFSH> { actions = [ LatchMods(mods=Shift,clearLocks) ] };
    key <RTSH> { actions = [ LatchMods(mods=Shift,clearLocks) ] };
    key <LCTL> { actions = [ LatchMods(mods=Control,clearLocks) ] };
    key <RCTL> { actions = [ LatchMods(mods=Control,clearLocks) ] };
    key <LALT> { actions = [ LatchMods(mods=Alt,clearLocks) ] };
    // <RALT> is used as a Compose key, see below.
    key <LWIN> { actions = [ LatchMods(mods=Super,clearLocks) ] };
    key <RWIN> { actions = [ LatchMods(mods=Super,clearLocks) ] };

    include "compose(ralt)"
};
